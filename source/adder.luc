module adder #(
    SIZE ~ 32 : SIZE > 1
)(
    input a[SIZE],
    input b[SIZE],
    input alufn_signal[6],
    output out[SIZE],
    output z,
    output v,
    output n
) {
    rca rca(#SIZE(SIZE))
    sig xb31
    always {
        rca.a = a
        rca.b = (SIZEx{alufn_signal[0]})^b
        rca.cin = alufn_signal[0]
        out = rca.s
        z = ~|rca.s
        xb31 = alufn_signal[0]^b[SIZE-1]
        v = (a[SIZE-1] & xb31 & (~rca.s[SIZE-1])) | ((~a[SIZE-1]) & (~xb31) & rca.s[SIZE-1])
        n = rca.s[SIZE-1]
    }
}