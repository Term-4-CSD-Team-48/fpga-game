module game_cu (
    input clk,  // clock
    input rst,  // reset
    input increase_counter,
    input decrease_timer,
    input regfile_rd2[32], //direct reading of regfile data from rd2
    
    input p1_button,
    input p2_button,
    
    output alufn[6],
    output asel[2],
    output bsel[2],
    output wdsel[2],
    output regfile_wa[4],
    output regfile_ra1[4],
    output regfile_ra2[4],
    output regfile_we,
    output debug[4]
) {
    enum GameStates{
        START_SET_TIMER,
        INC_COUNTER, 
        GENERATE_LOW, 
        GENERATE_INBETWEEN, 
        GENERATE_HIGH,
        IDLE, 
        CHECK_P1HIGHBUTTONPRESS, 
        BRANCH_P1HIGHBUTTONPRESS,
        CHECK_P1INBETWEENBUTTONPRESS, 
        BRANCH_P1INBETWEENBUTTONPRESS,
        CHECK_P1LOWBUTTONPRESS, 
        BRANCH_P1LOWBUTTONPRESS,
        INCREASE_P1SCORE, 
        CHECK_P2HIGHBUTTONPRESS, 
        BRANCH_P2HIGHBUTTONPRESS,
        CHECK_P2INBETWEENBUTTONPRESS, 
        BRANCH_P2INBETWEENBUTTONPRESS,
        CHECK_P2LOWBUTTONPRESS, 
        BRANCH_P2LOWBUTTONPRESS,
        INCREASE_P2SCORE,
        RESET_COUNTER, 
        DECREASE_GAMETIMER, 
        CHECK_GAMETIMER,
        BRANCH_GAMETIMER,
        CHECK_P1P2BUTTONCOUNT,
        BRANCHCHECK_P1P2BUTTONCOUNT,
        BRANCH_P1BUTTONCOUNT, 
        RESET_LOWER, 
        RESET_UPPER, 
        RESET_RANDOM, 
        CHECK_DRAW,
        BRANCH_DRAW,
        DRAW,
        CHECK_WINNER,
        BRANCH_WINNER,
        P1WINS,
        P2LOSE,
        P2WINS,
        P1LOSE,
        GAMEOVER
    }

dff game_fsm[$width(GameStates)](#INIT(GameStates.START_SET_TIMER), .clk(clk), .rst(rst))
    
    always {
        
        // standard setting unless otherwise overwritten by each case 
        alufn = 0
        asel = 0 
        bsel = 0
        regfile_we = 0
        regfile_wa = d6 
        regfile_ra1 = d0
        regfile_ra2 = d0
        alu_out_sel = 0
        
        debug = b0000
        
        
        game_fsm.d = game_fsm.q
        if (rst){
            game_fsm.d = GameStates.START_SET_TIMER
        }
        else{
            
            case(game_fsm.q){
                
                GameStates.START_SET_TIMER: 
    
