module regfile (
    input clk,  // clock
    input rst,  // reset
    input wa[4], // write address
    input we, // write enable signal
    input data[32], // data in
    
    input ra1[4], // read address port 1
    input ra2[4], // read address port 2
    output rd1[32], // read data port 1
    output rd2[32], // read data port 2
    
    // States
    output p1_score_out[32], // 0x0 P1 Score Reg
    output p2_score_out[32], // 0x1 P2 Score Reg
    output p1_button_out[32], // 0x2 P1 Button Reg
    output p2_button_out[32],
    output lower_bound_out[32],
    output higher_bound_out[32],
    output gen_num_out[32],
    output timer_out[32]
 
) 
{
    .clk(clk) {
        .rst(rst) {
            dff p1_score[32](#INIT(0))
            dff p2_score[32](#INIT(0))
            dff p1_button_press[32](#INIT(0))
            dff p2_button_press[32](#INIT(0))
            dff low_number[32](#INIT(0))
            dff high_number[32](#INIT(0))
            dff gen_number[32](#INIT(0))
            dff current_timer[32](#INIT(0))
            dff temp_var[32](#INIT(0))
        }
    }
    always {
        
        // Write Port
        if (we) {
            case (wa) {
                d0: p1_score.d = data
                d1: p2_score.d = data
                d2: p1_button_press.d = data
                d3: p2_button_press.d = data
                d4: low_number.d = data
                d5: high_number.d = data
                d6: gen_number.d = data
                d7: current_timer.d = data
                d8: temp_var.d = data
            }
        }
        
        // Read Port A
        case (ra1) {
            d0 : rd1 = p1_score.q
            d1 : rd1 = p2_score.q
            d2 : rd1 = p1_button_press.q
            d3 : rd1 = p2_button_press.q
            d4 : rd1 = low_number.q
            d5 : rd1 = high_number.q
            d6 : rd1 = gen_number.q
            d7 : rd1 = current_timer.q
            d8 : rd1 = temp_var.q
            default : rd1 = 0
        }
        
        // Read Port B
        case (ra2) {
            d0 : rd2 = p1_score.q
            d1 : rd2 = p2_score.q
            d2 : rd2 = p1_button_press.q
            d3 : rd2 = p2_button_press.q
            d4 : rd2 = low_number.q
            d5 : rd2 = high_number.q
            d6 : rd2 = gen_number.q
            d7 : rd2 = current_timer.q
            d8 : rd2 = temp_var.q
            default : rd2 = 0
        }
        
        p1_score_out = p1_score.q
        p2_score_out = p2_score.q
        p1_button_out = p1_button_press.q
        p2_button_out = p2_button_press.q
        lower_bound_out = low_number.q
        higher_bound_out = high_number.q
        gen_num_out = gen_number.q
        timer_out = current_timer.q
    }
}