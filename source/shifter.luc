module shifter #(
    SIZE = 32 : SIZE > 1,
    SHIFTERS = 5 : SHIFTERS > 0
)(
    input a[SIZE],
    input b[5],
    input alufn[6],
    output shift[SIZE]
) {
    #SIZE(SIZE) {
        x_bit_left_shifter left_shifters[SHIFTERS](#SHIFT({5b10000, 5b01000, 5b00100, 5b00010, 5b00001}))
        x_bit_right_shifter right_shifters[SHIFTERS](#SHIFT({5b10000, 5b01000, 5b00100, 5b00010, 5b00001}))
    }
    always {
        repeat(i, SHIFTERS, 0, 1) {
            left_shifters.shift[i] = b[i]
            right_shifters.shift[i] = b[i]
        }
        left_shifters.a[0] = a
        right_shifters.a[0] = a
        repeat(i, SHIFTERS - 1, 1, 1) {
            left_shifters.a[i] = left_shifters.out[i-1]
            right_shifters.a[i] = right_shifters.out[i-1]
        }
        left_shifters.pad = 0
        right_shifters.pad = 0
        if (alufn[0]) {
            if (alufn[1]) {
                right_shifters.pad = SHIFTERSx{a[SIZE-1]}
                shift = right_shifters.out[SHIFTERS - 1]
            } else {
                shift = right_shifters.out[SHIFTERS - 1]
            }
        } else {
            shift = left_shifters.out[SHIFTERS - 1]
        }
    } 
}